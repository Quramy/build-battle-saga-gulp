(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{133:function(e,n,a){a(134),a(344),e.exports=a(341)},337:function(e,n,a){var t={"./00_title.md":338,"./05_me.md":339,"./10_fig.md":340};function l(e){var n=r(e);return a(n)}function r(e){if(!a.o(t,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t[e]}l.keys=function(){return Object.keys(t)},l.resolve=r,e.exports=l,l.id=337},338:function(e,n,a){"use strict";a.r(n),a.d(n,"slides",function(){return p}),a.d(n,"fusumaProps",function(){return s}),a.d(n,"default",function(){return b});var t=a(3),l=a.n(t),r=a(1);function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}function u(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=[function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h1",null,"楽しいGulp入門"),Object(r.a)("p",{style:{marginTop:"60px"}},"Build Battle Saga ~ Frontend ~ ",Object(r.a)("br",null)))}],s=[{}],i={slides:p},o="wrapper";function b(e){var n=e.components,a=u(e,["components"]);return Object(r.a)(o,c({},i,a,{components:n,mdxType:"MDXLayout"}),Object(r.a)("h1",null,"楽しいGulp入門"),Object(r.a)("p",{style:{marginTop:"60px"}},"Build Battle Saga ~ Frontend ~ ",Object(r.a)("br",null)))}b.isMDXComponent=!0},339:function(e,n,a){"use strict";a.r(n),a.d(n,"slides",function(){return p}),a.d(n,"fusumaProps",function(){return s}),a.d(n,"default",function(){return b});var t=a(3),l=a.n(t),r=a(1);function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}function u(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=[function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"About me"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"Yosuke Kurami(@Quramy)"),Object(r.a)("li",{parentName:"ul"},"Front-end Web developer")))}],s=[{}],i={slides:p},o="wrapper";function b(e){var n=e.components,a=u(e,["components"]);return Object(r.a)(o,c({},i,a,{components:n,mdxType:"MDXLayout"}),Object(r.a)("h2",null,"About me"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"Yosuke Kurami(@Quramy)"),Object(r.a)("li",{parentName:"ul"},"Front-end Web developer")))}b.isMDXComponent=!0},340:function(e,n,a){"use strict";a.r(n),a.d(n,"slides",function(){return p}),a.d(n,"fusumaProps",function(){return s}),a.d(n,"default",function(){return b});var t=a(3),l=a.n(t),r=a(1);function c(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}function u(){return(u=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var p=[function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"gulpfile、書いてますか？"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"Gulpの基本"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"タスクランナーの一種"),Object(r.a)("li",{parentName:"ul"},"ファイル単位の処理が得意"),Object(r.a)("li",{parentName:"ul"},"パイプで変換処理を連鎖",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"種々のプラグインで様々な変換を施す")))))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"v3.x"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\nconst gulp = require('gulp')\nconst babel = require('gulp-babel')\n\ngulp.task('transpile', () =>\n  gulp.src('src/**/*.js')\n    .pipe(babel())\n    .pipe(gulp.dest('dist'))\n)\n")),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-bash"}),"$ npx gulp transpile\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"v4.x"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\nconst { src, dest } = require('gulp')\nconst babel = require('gulp-babel')\n\nmodule.exports.transpile = () =>\n  src('src/**/*.js')\n    .pipe(babel())\n    .pipe(dest('dist'))\n)\n")),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-bash"}),"$ npx gulp transpile\n")),Object(r.a)("p",null,"publicにしたいタスクをexportするだけ。プラグインの使い方は今まで通り"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"並列実行"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { parallel, src, dest } = require('gulp')\n\nfunction css() {\n  return src('src/**/*.scss')\n    // 以下略\n}\n\nfunction js() {\n  return src('src/**/*.js')\n    // 以下略\n}\n\nmodule.exports.default = parallel(css, js)\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"直列実行"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { series, src, dest } = require('gulp')\n\nfunction hoge() {\n  return src('src/**/*')\n    // 以下略\n}\n\nfunction bar() {\n  return src('dist/**/*')\n    // 以下略\n}\n\nmodule.exports.default = series(hoge, bar)\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,Object(r.a)("strong",{parentName:"h2"},"こんなんはAPI Doc読めばわかる")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"なんでGulpの話を持ってきたの？"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"確かに、大体のbuild処理はwebpackで事足りてしまう"),Object(r.a)("li",{parentName:"ul"},"とはいえ、webpackの事前・事後のタスクをシュッと書きたいことも多い")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"例：成果物のupload"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\n\nconst { src } = require('gulp')\nconst s3 = require('gulp-s3-upload')()\n\nmodule.exports.deploy = () =>\n  src(['webpack_dist/**/*', '!webpack_dist/**/*.map'])\n    .pipe(s3({ bucket: 'my-s3-bucket' }))\n}\n")),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),'// package.json\n\n  "scripts": {\n    "bundle": "webpack --mode production",\n    "deploy": "gulp deploy"\n  },\n')))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"都合よくpluginが見つからないときはどうする？"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"自分で書けばいいじゃない"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"pluginの書き方"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const through = require('through2')\n\nfunction hogePlugin() {\n  function transform(file, encoding, cb) {\n    if (!file.isBuffer()) return cb(null, file)\n    const contentsStr = file.contents.toString()\n    file.contents = new Buffer(/* contentsStrをゴニョる */)\n    this.push(file)\n    cb()\n  }\n\n  return through.obj(transform)\n}\n")),Object(r.a)("p",null,"細かいこと考えなきゃ↑で十分"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"例：Bugsnagへの.mapファイルupload"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const fs = require('fs')\nconst path = require('path')\nconst through = require('through2')\nconst rp = require('request-promise')\n\nfunction uploadMapToBugsnag() {\n\n  const apiKey = process.env['BUGSNAG_API_KEY']\n  const appVersion = process.env['CI_COMMIT_SHA']\n\n  async function transform(file, encoding, cb) {\n    const jsPath = file.path.replace(/\\.map$/, '')\n    const shortPath = path.relative(path.resolve(__dirname, 'dist'), jsPath)\n    try {\n      await rp({\n        method: 'POST',\n        uri: 'https://upload.bugsnag.example.com',\n        formData: {\n          apiKey,\n          appVersion,\n          minifiedUrl: `https://example.com/js/${shortPath}`,\n          minifiedFile: fs.createReadStream(jsPath),\n          sourceMap: fs.createReadStream(file.path),\n        },\n      })\n      cb(null, file)\n    } catch (err) {\n      cb(err)\n    }\n  }\n\n  return through.obj(transform)\n}\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"利用側"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\n\nconst { src, parallel } = require('gulp')\nconst s3 = require('gulp-s3-upload')()\n\nmodule.exports.deploy = parallel(\n  () =>\n    src(['webpack_dist/**/*', '!webpack_dist/**/*.map'])\n      .pipe(s3({ bucket: 'my-s3-bucket' })),\n  () => \n    src(['webpack_dist/**/*.map'])\n      .pipe(uploadMapToBugsnag()),\n)\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"...真っ当な話はここらへんまで"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"なんでGulpの話を持ってきたの？（再）"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"Gulpの基本"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"ファイル単位の変換処理？",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"ASTベースの変換処理はxxx-loader + webpackでまかなえる"))),Object(r.a)("li",{parentName:"ul"},"タスクランナー？",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"他のCLI混ざってる時点で全体のタスク制御としては使ってない"),Object(r.a)("li",{parentName:"ul"},"どっちかっていうとNPM scripts")))))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"メインのbuild処理では拾えない処理がgulpfile.jsに溜まっていく"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"気持ち悪いものができあがることもしばしば"),Object(r.a)("p",null,Object(r.a)("img",u({parentName:"p"},{src:"https://1.bp.blogspot.com/-lx-43V0VcJA/Wn1V5H7yRlI/AAAAAAABKGI/D9_oMJ01FXg1GToW7D7WYHh7tQBRfAZjACLcBGAs/s800/food_yaminabe.png",alt:"yaminabe"}))))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"ここからはアレなGulpタスクを晒して懺悔"),Object(r.a)("p",null,Object(r.a)("img",u({parentName:"p"},{src:"https://3.bp.blogspot.com/-ADqhfQE62F8/Wn1Wdu4VgjI/AAAAAAABKKM/tDXXMrGiVl44xfRHgqic_IHK6J6SjiGEQCLcBGAs/s800/zange_man.png",alt:"zange"}))))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"やらかし1"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { series, src, dest } = require('gulp')\nconst babel = require('gulp-babel')\nconst sourcemaps = require('gulp-sourcemaps')\n\nmodule.exports.transpile = series(\n  () =>\n    src('frontend/src/**/*.+(js|jsx)')\n      .pipe(sourcemaps.init())\n      .pipe(babel())\n      .pipe(sourcemaps.write('.'))\n      .pipe(gulp.dest('frontend/src')),\n  () =>\n    src('backend/src/**/*.+(js|jsx)')\n      .pipe(sourcemaps.init())\n      .pipe(babel())\n      .pipe(sourcemaps.write('.'))\n      .pipe(gulp.dest('background/src')),\n)\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"土下座ポイント"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"srcとdest一緒"),Object(r.a)("li",{parentName:"ul"},"commitする前に手元で実行すると無事死亡 😇")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"言い訳"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"20万行くらいあるSSR + SPA構成"),Object(r.a)("li",{parentName:"ul"},"ECS化した際にDockerの起動ヘルスチェックがタイムタウト"),Object(r.a)("li",{parentName:"ul"},"Node.js起動時に ",Object(r.a)("inlineCode",{parentName:"li"},"babel-register")," してた 😇"),Object(r.a)("li",{parentName:"ul"},"image作るときにbuild済ませておきたい")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"babel-plugin-root-importが糞邪魔"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"/* backend/src/server.jsx */\n\n// ↓はrequire('../../frontend/src/containers/App') にされる\nimport App from '~/containers/App'\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"やらかし2"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { src, dest, parallel } = require('gulp')\nconst replace = require('gulp-replace')\nconst { prefix } = require('minimist')(process.argv.slice(2), {\n  alias: { p: 'prefix' },\n})\n\nmodule.exports.replacePrefix = parallel(\n  () =>\n    src('src/**/*.+(jsx|html)')\n      .pipe(\n        replace(/(<img[^>]*\\s+)src=\"([^\"]*)\"/g, (_, pre, url) =>\n          /^https?/.test(url) ? _ : `${pre}src=\"${prefix}${url}\"`,\n        ),\n      )\n      .pipe(dest('src')),\n  () =>\n    src('src/**/*.+(scss|css)')\n      .pipe(\n        replace(/(url\\(')([^']*)/g, (_, pre, url) =>\n          /^https?/.test(url) ? _ : `${pre}${prefix}${url}`,\n        ),\n      )\n      .pipe(dest('src')),\n)\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"土下座ポイント"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"srcとdestが(ry"),Object(r.a)("li",{parentName:"ul"},"HTMLは正規表現でparseしちゃダメ")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"名著"),Object(r.a)("p",null,Object(r.a)("img",u({parentName:"p"},{src:"https://i.gyazo.com/9f9f18a2ba7a0f16eb5998322db24ec9.png",alt:"Image from Gyazo"})),"]"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"言い訳"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"CIでStorybookをS3へuploadしている"),Object(r.a)("li",{parentName:"ul"},"base path部分を無理やり差し替えてる",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"local: ",Object(r.a)("inlineCode",{parentName:"li"},"http://localhost:9001/images/hoge.png")," "),Object(r.a)("li",{parentName:"ul"},"S3: ",Object(r.a)("inlineCode",{parentName:"li"},"https://bucket.example.com/<CI_COMMIT_SHA>/images/hoge.png"))))))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"やらかし3"))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { src, dest } = require('gulp')\n\nmodule.exports.injectPreview = () =>\n  src('public/**/*.+(png|jpg|jpeg|svg)')\n    .pipe(\n      injectPreload({\n        template: './.storybook/preview-head.template.html',\n        outName: 'preview-head.html',\n      }),\n    )\n    .pipe(dest('./.storybook'))\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const fs = require('fs')\nconst { File } = require('gulp-util')\nconst through = require('through2')\n\nfunction injectPreload({ template, outName, prefix = '' }) {\n  const links = []\n\n  function transform(file, encoding, cb) {\n    const href = `${prefix}${file.path.replace(file.base, '')}`\n    links.push(`<link rel=\"preload\" as=\"image\" href=\"${href}\">`)\n    cb()\n  }\n\n  function flush(cb) {\n    fs.readFile(template, 'utf-8', (err, content) => {\n      if (err) return cb(err)\n      this.push(new File({\n        path: outName,\n        contents: new Buffer.from(links.join('\\n') + '\\n' + content),\n      }))\n      cb()\n    })\n  }\n\n  return through.obj(transform, flush)\n}\n")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"土下座ポイント"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"そもそも何がしたいのか全然わからなくてごめんなさい")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"作りたいもの"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-html"}),'<link rel="preload" as="image" href="/images/hoge.png">\n<link rel="preload" as="image" href="/images/fuga.svg">\n<script>\n// リソースの先読み完了を表すPromise\nvar _resoucesPreloaded =\n  Promise.all(\n    [...document.querySelectorAll(\'link[rel="preload"]\')].map(\n      link => new Promise(link.addEventListener.bind(link, \'load\'))\n    )\n  )\n<\/script>\n')))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h3",null,"やりたいこと"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"CIでStorybookのキャプチャ撮ってる"),Object(r.a)("li",{parentName:"ul"},"CSSの ",Object(r.a)("inlineCode",{parentName:"li"},"background-image: url(...)")," が空振ることが多い"),Object(r.a)("li",{parentName:"ul"},Object(r.a)("inlineCode",{parentName:"li"},"preload")," link の ",Object(r.a)("inlineCode",{parentName:"li"},"onload")," で先読みの完了を待ってからキャプチャ取得させるため",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},Object(r.a)("a",u({parentName:"li"},{href:"https://github.com/Quramy/zisui#type-screenshotoptions"}),"https://github.com/Quramy/zisui#type-screenshotoptions"))))))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h2",null,"まとめ"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"gulpはbuildの事前・事後処理に向いてる",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"「事後」の方は比較的まとも"),Object(r.a)("li",{parentName:"ul"},"「事前」の方は気持ち悪いタスクになりがち（俺だけ？"))),Object(r.a)("li",{parentName:"ul"},Object(r.a)("inlineCode",{parentName:"li"},'"prebuild": "gulp run ..."')," とか見たら注意しような！")))},function(e){return Object(r.a)(l.a.Fragment,null,Object(r.a)("h1",null,"Thank you!"))}],s=[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],i={slides:p},o="wrapper";function b(e){var n=e.components,a=c(e,["components"]);return Object(r.a)(o,u({},i,a,{components:n,mdxType:"MDXLayout"}),Object(r.a)("h2",null,"gulpfile、書いてますか？"),Object(r.a)("hr",null),Object(r.a)("h2",null,"Gulpの基本"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"タスクランナーの一種"),Object(r.a)("li",{parentName:"ul"},"ファイル単位の処理が得意"),Object(r.a)("li",{parentName:"ul"},"パイプで変換処理を連鎖",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"種々のプラグインで様々な変換を施す")))),Object(r.a)("hr",null),Object(r.a)("h3",null,"v3.x"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\nconst gulp = require('gulp')\nconst babel = require('gulp-babel')\n\ngulp.task('transpile', () =>\n  gulp.src('src/**/*.js')\n    .pipe(babel())\n    .pipe(gulp.dest('dist'))\n)\n")),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-bash"}),"$ npx gulp transpile\n")),Object(r.a)("hr",null),Object(r.a)("h3",null,"v4.x"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\nconst { src, dest } = require('gulp')\nconst babel = require('gulp-babel')\n\nmodule.exports.transpile = () =>\n  src('src/**/*.js')\n    .pipe(babel())\n    .pipe(dest('dist'))\n)\n")),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-bash"}),"$ npx gulp transpile\n")),Object(r.a)("p",null,"publicにしたいタスクをexportするだけ。プラグインの使い方は今まで通り"),Object(r.a)("hr",null),Object(r.a)("h3",null,"並列実行"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { parallel, src, dest } = require('gulp')\n\nfunction css() {\n  return src('src/**/*.scss')\n    // 以下略\n}\n\nfunction js() {\n  return src('src/**/*.js')\n    // 以下略\n}\n\nmodule.exports.default = parallel(css, js)\n")),Object(r.a)("hr",null),Object(r.a)("h3",null,"直列実行"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { series, src, dest } = require('gulp')\n\nfunction hoge() {\n  return src('src/**/*')\n    // 以下略\n}\n\nfunction bar() {\n  return src('dist/**/*')\n    // 以下略\n}\n\nmodule.exports.default = series(hoge, bar)\n")),Object(r.a)("hr",null),Object(r.a)("h2",null,Object(r.a)("strong",{parentName:"h2"},"こんなんはAPI Doc読めばわかる")),Object(r.a)("hr",null),Object(r.a)("h2",null,"なんでGulpの話を持ってきたの？"),Object(r.a)("hr",null),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"確かに、大体のbuild処理はwebpackで事足りてしまう"),Object(r.a)("li",{parentName:"ul"},"とはいえ、webpackの事前・事後のタスクをシュッと書きたいことも多い")),Object(r.a)("hr",null),Object(r.a)("h2",null,"例：成果物のupload"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\n\nconst { src } = require('gulp')\nconst s3 = require('gulp-s3-upload')()\n\nmodule.exports.deploy = () =>\n  src(['webpack_dist/**/*', '!webpack_dist/**/*.map'])\n    .pipe(s3({ bucket: 'my-s3-bucket' }))\n}\n")),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),'// package.json\n\n  "scripts": {\n    "bundle": "webpack --mode production",\n    "deploy": "gulp deploy"\n  },\n')),Object(r.a)("hr",null),Object(r.a)("h3",null,"都合よくpluginが見つからないときはどうする？"),Object(r.a)("hr",null),Object(r.a)("h2",null,"自分で書けばいいじゃない"),Object(r.a)("hr",null),Object(r.a)("h3",null,"pluginの書き方"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const through = require('through2')\n\nfunction hogePlugin() {\n  function transform(file, encoding, cb) {\n    if (!file.isBuffer()) return cb(null, file)\n    const contentsStr = file.contents.toString()\n    file.contents = new Buffer(/* contentsStrをゴニョる */)\n    this.push(file)\n    cb()\n  }\n\n  return through.obj(transform)\n}\n")),Object(r.a)("p",null,"細かいこと考えなきゃ↑で十分"),Object(r.a)("hr",null),Object(r.a)("h3",null,"例：Bugsnagへの.mapファイルupload"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const fs = require('fs')\nconst path = require('path')\nconst through = require('through2')\nconst rp = require('request-promise')\n\nfunction uploadMapToBugsnag() {\n\n  const apiKey = process.env['BUGSNAG_API_KEY']\n  const appVersion = process.env['CI_COMMIT_SHA']\n\n  async function transform(file, encoding, cb) {\n    const jsPath = file.path.replace(/\\.map$/, '')\n    const shortPath = path.relative(path.resolve(__dirname, 'dist'), jsPath)\n    try {\n      await rp({\n        method: 'POST',\n        uri: 'https://upload.bugsnag.example.com',\n        formData: {\n          apiKey,\n          appVersion,\n          minifiedUrl: `https://example.com/js/${shortPath}`,\n          minifiedFile: fs.createReadStream(jsPath),\n          sourceMap: fs.createReadStream(file.path),\n        },\n      })\n      cb(null, file)\n    } catch (err) {\n      cb(err)\n    }\n  }\n\n  return through.obj(transform)\n}\n")),Object(r.a)("hr",null),Object(r.a)("h3",null,"利用側"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"// gulpfile.js\n\nconst { src, parallel } = require('gulp')\nconst s3 = require('gulp-s3-upload')()\n\nmodule.exports.deploy = parallel(\n  () =>\n    src(['webpack_dist/**/*', '!webpack_dist/**/*.map'])\n      .pipe(s3({ bucket: 'my-s3-bucket' })),\n  () => \n    src(['webpack_dist/**/*.map'])\n      .pipe(uploadMapToBugsnag()),\n)\n")),Object(r.a)("hr",null),Object(r.a)("h2",null,"...真っ当な話はここらへんまで"),Object(r.a)("hr",null),Object(r.a)("h2",null,"なんでGulpの話を持ってきたの？（再）"),Object(r.a)("hr",null),Object(r.a)("h2",null,"Gulpの基本"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"ファイル単位の変換処理？",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"ASTベースの変換処理はxxx-loader + webpackでまかなえる"))),Object(r.a)("li",{parentName:"ul"},"タスクランナー？",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"他のCLI混ざってる時点で全体のタスク制御としては使ってない"),Object(r.a)("li",{parentName:"ul"},"どっちかっていうとNPM scripts")))),Object(r.a)("hr",null),Object(r.a)("h3",null,"メインのbuild処理では拾えない処理がgulpfile.jsに溜まっていく"),Object(r.a)("hr",null),Object(r.a)("h2",null,"気持ち悪いものができあがることもしばしば"),Object(r.a)("p",null,Object(r.a)("img",u({parentName:"p"},{src:"https://1.bp.blogspot.com/-lx-43V0VcJA/Wn1V5H7yRlI/AAAAAAABKGI/D9_oMJ01FXg1GToW7D7WYHh7tQBRfAZjACLcBGAs/s800/food_yaminabe.png",alt:"yaminabe"}))),Object(r.a)("hr",null),Object(r.a)("h2",null,"ここからはアレなGulpタスクを晒して懺悔"),Object(r.a)("p",null,Object(r.a)("img",u({parentName:"p"},{src:"https://3.bp.blogspot.com/-ADqhfQE62F8/Wn1Wdu4VgjI/AAAAAAABKKM/tDXXMrGiVl44xfRHgqic_IHK6J6SjiGEQCLcBGAs/s800/zange_man.png",alt:"zange"}))),Object(r.a)("hr",null),Object(r.a)("h2",null,"やらかし1"),Object(r.a)("hr",null),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { series, src, dest } = require('gulp')\nconst babel = require('gulp-babel')\nconst sourcemaps = require('gulp-sourcemaps')\n\nmodule.exports.transpile = series(\n  () =>\n    src('frontend/src/**/*.+(js|jsx)')\n      .pipe(sourcemaps.init())\n      .pipe(babel())\n      .pipe(sourcemaps.write('.'))\n      .pipe(gulp.dest('frontend/src')),\n  () =>\n    src('backend/src/**/*.+(js|jsx)')\n      .pipe(sourcemaps.init())\n      .pipe(babel())\n      .pipe(sourcemaps.write('.'))\n      .pipe(gulp.dest('background/src')),\n)\n")),Object(r.a)("hr",null),Object(r.a)("h3",null,"土下座ポイント"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"srcとdest一緒"),Object(r.a)("li",{parentName:"ul"},"commitする前に手元で実行すると無事死亡 😇")),Object(r.a)("hr",null),Object(r.a)("h3",null,"言い訳"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"20万行くらいあるSSR + SPA構成"),Object(r.a)("li",{parentName:"ul"},"ECS化した際にDockerの起動ヘルスチェックがタイムタウト"),Object(r.a)("li",{parentName:"ul"},"Node.js起動時に ",Object(r.a)("inlineCode",{parentName:"li"},"babel-register")," してた 😇"),Object(r.a)("li",{parentName:"ul"},"image作るときにbuild済ませておきたい")),Object(r.a)("hr",null),Object(r.a)("h3",null,"babel-plugin-root-importが糞邪魔"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"/* backend/src/server.jsx */\n\n// ↓はrequire('../../frontend/src/containers/App') にされる\nimport App from '~/containers/App'\n")),Object(r.a)("hr",null),Object(r.a)("h2",null,"やらかし2"),Object(r.a)("hr",null),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { src, dest, parallel } = require('gulp')\nconst replace = require('gulp-replace')\nconst { prefix } = require('minimist')(process.argv.slice(2), {\n  alias: { p: 'prefix' },\n})\n\nmodule.exports.replacePrefix = parallel(\n  () =>\n    src('src/**/*.+(jsx|html)')\n      .pipe(\n        replace(/(<img[^>]*\\s+)src=\"([^\"]*)\"/g, (_, pre, url) =>\n          /^https?/.test(url) ? _ : `${pre}src=\"${prefix}${url}\"`,\n        ),\n      )\n      .pipe(dest('src')),\n  () =>\n    src('src/**/*.+(scss|css)')\n      .pipe(\n        replace(/(url\\(')([^']*)/g, (_, pre, url) =>\n          /^https?/.test(url) ? _ : `${pre}${prefix}${url}`,\n        ),\n      )\n      .pipe(dest('src')),\n)\n")),Object(r.a)("hr",null),Object(r.a)("h3",null,"土下座ポイント"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"srcとdestが(ry"),Object(r.a)("li",{parentName:"ul"},"HTMLは正規表現でparseしちゃダメ")),Object(r.a)("hr",null),Object(r.a)("h3",null,"名著"),Object(r.a)("p",null,Object(r.a)("img",u({parentName:"p"},{src:"https://i.gyazo.com/9f9f18a2ba7a0f16eb5998322db24ec9.png",alt:"Image from Gyazo"})),"]"),Object(r.a)("hr",null),Object(r.a)("h3",null,"言い訳"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"CIでStorybookをS3へuploadしている"),Object(r.a)("li",{parentName:"ul"},"base path部分を無理やり差し替えてる",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"local: ",Object(r.a)("inlineCode",{parentName:"li"},"http://localhost:9001/images/hoge.png")," "),Object(r.a)("li",{parentName:"ul"},"S3: ",Object(r.a)("inlineCode",{parentName:"li"},"https://bucket.example.com/<CI_COMMIT_SHA>/images/hoge.png"))))),Object(r.a)("hr",null),Object(r.a)("h2",null,"やらかし3"),Object(r.a)("hr",null),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const { src, dest } = require('gulp')\n\nmodule.exports.injectPreview = () =>\n  src('public/**/*.+(png|jpg|jpeg|svg)')\n    .pipe(\n      injectPreload({\n        template: './.storybook/preview-head.template.html',\n        outName: 'preview-head.html',\n      }),\n    )\n    .pipe(dest('./.storybook'))\n")),Object(r.a)("hr",null),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-js"}),"const fs = require('fs')\nconst { File } = require('gulp-util')\nconst through = require('through2')\n\nfunction injectPreload({ template, outName, prefix = '' }) {\n  const links = []\n\n  function transform(file, encoding, cb) {\n    const href = `${prefix}${file.path.replace(file.base, '')}`\n    links.push(`<link rel=\"preload\" as=\"image\" href=\"${href}\">`)\n    cb()\n  }\n\n  function flush(cb) {\n    fs.readFile(template, 'utf-8', (err, content) => {\n      if (err) return cb(err)\n      this.push(new File({\n        path: outName,\n        contents: new Buffer.from(links.join('\\n') + '\\n' + content),\n      }))\n      cb()\n    })\n  }\n\n  return through.obj(transform, flush)\n}\n")),Object(r.a)("hr",null),Object(r.a)("h3",null,"土下座ポイント"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"そもそも何がしたいのか全然わからなくてごめんなさい")),Object(r.a)("hr",null),Object(r.a)("h3",null,"作りたいもの"),Object(r.a)("pre",null,Object(r.a)("code",u({parentName:"pre"},{className:"language-html"}),'<link rel="preload" as="image" href="/images/hoge.png">\n<link rel="preload" as="image" href="/images/fuga.svg">\n<script>\n// リソースの先読み完了を表すPromise\nvar _resoucesPreloaded =\n  Promise.all(\n    [...document.querySelectorAll(\'link[rel="preload"]\')].map(\n      link => new Promise(link.addEventListener.bind(link, \'load\'))\n    )\n  )\n<\/script>\n')),Object(r.a)("hr",null),Object(r.a)("h3",null,"やりたいこと"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"CIでStorybookのキャプチャ撮ってる"),Object(r.a)("li",{parentName:"ul"},"CSSの ",Object(r.a)("inlineCode",{parentName:"li"},"background-image: url(...)")," が空振ることが多い"),Object(r.a)("li",{parentName:"ul"},Object(r.a)("inlineCode",{parentName:"li"},"preload")," link の ",Object(r.a)("inlineCode",{parentName:"li"},"onload")," で先読みの完了を待ってからキャプチャ取得させるため",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},Object(r.a)("a",u({parentName:"li"},{href:"https://github.com/Quramy/zisui#type-screenshotoptions"}),"https://github.com/Quramy/zisui#type-screenshotoptions"))))),Object(r.a)("hr",null),Object(r.a)("h2",null,"まとめ"),Object(r.a)("ul",null,Object(r.a)("li",{parentName:"ul"},"gulpはbuildの事前・事後処理に向いてる",Object(r.a)("ul",{parentName:"li"},Object(r.a)("li",{parentName:"ul"},"「事後」の方は比較的まとも"),Object(r.a)("li",{parentName:"ul"},"「事前」の方は気持ち悪いタスクになりがち（俺だけ？"))),Object(r.a)("li",{parentName:"ul"},Object(r.a)("inlineCode",{parentName:"li"},'"prebuild": "gulp run ..."')," とか見たら注意しような！")),Object(r.a)("hr",null),Object(r.a)("h1",null,"Thank you!"))}b.isMDXComponent=!0},342:function(e,n,a){var t=a(343);"string"==typeof t&&(t=[[e.i,t,""]]);var l={hmr:!0,transform:void 0,insertInto:void 0};a(51)(t,l);t.locals&&(e.exports=t.locals)},343:function(e,n,a){}},[[133,3,5]],[0]]);